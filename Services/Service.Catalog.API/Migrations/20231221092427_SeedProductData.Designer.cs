// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Service.Catalog.API.Infrustructure.Persistence;

#nullable disable

namespace Service.Catalog.API.Migrations
{
    [DbContext(typeof(SqlServerApplicationDB))]
    [Migration("20231221092427_SeedProductData")]
    partial class SeedProductData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Service.Catalog.API.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryName = "Apple, Digital",
                            Description = "Apple MacBook",
                            ImageURL = "",
                            Name = "MacBook",
                            Price = 999.99000000000001
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryName = "Apple, Digital",
                            Description = "Apple Phone",
                            ImageURL = "",
                            Name = "IPhone 13",
                            Price = 1000.99
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryName = "Samsung, Digital",
                            Description = "Samsung Phone",
                            ImageURL = "",
                            Name = "Samsung S23",
                            Price = 899.99000000000001
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
